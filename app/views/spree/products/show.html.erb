<style>
  .img-responsive.large-logo {
    max-width:70%;
  }

  <% width,height = calculate_product_image_dimensions(@product) %>
  .easyzoom--adjacent .easyzoom-flyout{
    width:<%= width.to_s %>px;
    height:<%= height.to_s %>px; 
  }

  .easyzoom-flyout{
    border:5px solid #eee;
    background:#fff;
    color:#333;
    position:absolute;
    top:0px;
    overflow:hidden;
    -moz-box-shadow:0 0 10px #777;
    -webkit-box-shadow:0 0 10px #777;
    box-shadow:0 0 10px #777;
    /* vertical and horizontal alignment used for preloader text */
    line-height:<% height/2 %>px;
    text-align:center;
    z-index:99999;
  }
  
  .slider-for .slick-list{
    overflow: visible;
  }  

  .slider-nav.ng-scope.slick-initialized.slick-slider{
    z-index:3;
  }

  .slider-for .slick-slide img{
    display:none !important;
  }

  .slider-for .slick-active img{
    display:block !important;
  }

  .slider-for .slick-track{
    height:240px;
  }

  html, body {
    max-width: 100% !important;
    overflow-x: hidden !important;
  }
  
  .back-btn{
    display:none;
    background: white;
    border: 1px solid;
    margin: 20px;
    position: absolute;
  }
  
  .h .back-btn{
    display:block;
    z-index:500;
  }

<% if (@product.variant_images.first.attachment_width rescue 0) <= 300 or (@product.variant_images.first.attachment_height rescue 0) <= 200  %>
 
  .easyzoom-flyout img{
    width:150%;
    height:150%;
  }
<% end %>

  .h{
    position: absolute;
    top: 0px;
    width: 100%;
    height: 100%;
    z-index: 10000;
    background: white;
    margin-bottom: 0px;
  }

  .b{
    bottom:0px;
    position:absolute;
    margin-left:0px;
    width:100%;
  }

</style>
<div class="main-content search-results-content" itemscope itemtype="http://schema.org/Product" ng-app="spreeStore">

  <input type="hidden" value="<%= agent_device %>" id="device_check">

  <div class="modal fade" id="itm_ord" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title" id="myModalLabel"></h4>
        </div>
        <div class="modal-body">
          <% if mobile_agent? %>
            <span id="art_message"></span>
          <% end %>
        </div>
        <div class="modal-footer ">
          <div class="col-md-2 text-left">
            <button type="submit" class="btn btn-sm " data-dismiss="modal" >
              Continue Shopping
            </button>
          </div>
          <div class="col-md-2 ">
          </div>
          <div class="col-md-2 text-right">
            <a href="/cart">
              <%= button_tag class: 'btn btn-sm btn-primary', id: 'update-button' do %>
                  Edit Cart
              <% end %>
            </a>
          </div>
          <div class="col-md-2 ">
          </div>
          <div class="col-md-2 text-right">
            <a href="/checkout">
              <%= button_tag class: 'btn btn-sm btn-success', id: 'checkout-link', name: 'checkout' do %>
                  <%= Spree.t(:checkout) %>
              <% end %>
            </a>
          </div>
          <div class="col-md-2 ">
          </div>
        </div>
      </div>
    </div>
  </div>


  <div class="modal fade" id="cart_view" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" id="cart-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title" id="myModalLabel">
            Shopping Cart<br>
            <% if !mobile_agent? %>
                <span id="art_message"></span>
            <% end %>
          </h4>
        </div>
        <div class="modal-body" id="cart_view_body">

        </div>
        <div class="modal-footer">
          <div class="col-md-4 text-left">
            <button type="submit" class="btn btn-lg " data-dismiss="modal" >
              Continue Shopping
            </button>
          </div>
          <div class="col-md-4 text-right">
          </div>
          <div class="col-md-4 text-right">
              <a href="/cart">
                  <%= button_tag class: 'btn btn-lg btn-primary', id: 'update-button' do %>
                        Edit Cart
                  <% end %>
              </a>

              <a href="/checkout">
                  <%= button_tag class: 'btn btn-lg btn-success', id: 'checkout-link', name: 'checkout' do %>
                    <%= Spree.t(:checkout) %>
                  <% end %>
              </a>
          </div>
        </div>
      </div>
    </div>
  </div>





  <div class="container" ng-controller="StoreController as store">

    <div class="row">

      <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 product-display">

        <div id="homepage-carousel" class="carousel slide" data-interval="false">
          <button class="btn back-btn">Back</button>

          <!-- Indicators -->
          <ol class="carousel-indicators">
            <li data-target="#homepage-carousel" data-slide-to="0" class="active"></li>
          </ol>
          <!-- Wrapper for slides -->


          <div style="overflow:visible;z-index:400;">
            <div class="item active product_main">
              <meta itemprop="image" content="<%=@product.variant_images.first.attachment.url rescue ''%>" />
              
              <div ng-if="(store.product.colors.length<=1 || store.product.variant_images_count==0)&& store.products.length==1" class="image_zoom easyzoom <%= mobile_agent? ? 'easyzoom--overlay' : 'easyzoom--adjacent' %>" style="margin-top:60px;">
                <a ng-href="{{store.product.image_large || store.no_image }}">
                  <img alt="{{store.product.name}}" ng-src="{{store.product.image || store.no_image }}" >       
                </a>
              </div>
              

              <div class="slider-for" ng-if="store.product.colors.length==1 && store.products.length > 1">
                  <div ng-repeat="product in store.products" id="{{product.id}}">
                    <div class ="zoom easyzoom <%= mobile_agent? ? 'easyzoom--overlay' : 'easyzoom--adjacent'%> ">
                      <a ng-href="{{product.image_large || store.no_image }}">
                        <img alt="{{product.name}}" ng-src="{{product.image || store.no_image }}" >       
                      </a>
                    </div>
                  </div>
              </div>

              <div class="slider-for" ng-if="store.product.colors.length != 1 && store.product.variant_images_count > 1">
                <div ng-if="store.product.master.image_mini" id='{{store.product.master.id}}'>
                  
                  <div class ="zoom easyzoom <%= mobile_agent? ? 'easyzoom--overlay' : 'easyzoom--adjacent'%>">
                    <a ng-href="{{store.product.master.image_large || store.no_image }}">
                      <img alt="{{store.product.name}}" ng-src="{{store.product.master.image || store.no_image }}" >       
                    </a>
                  </div>

                </div>
                <div ng-repeat="variant in store.product.variants" id="{{variant.id}}">
                  
                  <div class ="zoom easyzoom <%= mobile_agent? ? 'easyzoom--overlay' : 'easyzoom--adjacent'%>">
                    <a ng-href="{{variant.image_large || store.no_image }}">
                      <img alt="{{store.product.name}}" ng-src="{{variant.image || store.no_image }}" >       
                    </a>
                  </div>
                </div>
              </div>

            </div>
          </div>
          <!-- Controls -->
          <!-- <a class="left carousel-control fui-arrow-left" href="#homepage-carousel" data-slide="prev"></a>
          <a class="right carousel-control fui-arrow-right" href="#homepage-carousel" data-slide="next"></a> -->
          

          <div class="alert" style="z-index:5;background:white;text-align:center;bottom:70px;width:100%;">
            click/swipe above to zoom or change
          </div>


          <div class="row thumb-row">

            <div class="col-lg-12">

                  <div class="slider-nav" ng-if="store.product.colors.length==1 && store.products.length > 1">
                      <div ng-repeat="product in store.products" id="t_{{product.id}}">
                        <a href="" ng-click="store.thumb_clicked(product,'product')">
                          <img ng-src="{{product.master.image_mini || store.no_image_mini}}" class="" title="{{product.colors[0]}}"/>
                        </a>
                      </div>
                  </div>

                  <div class="slider-nav" ng-if="store.product.colors.length != 1 && store.product.variant_images_count > 1">
                    <div ng-show="store.product.variant_images_count == 1" id='t_{{store.product.master.id}}'>
                      <a href="" ng-click="store.thumb_clicked(store.product.master,'m_variant')">
                        <img style="height:60px;" ng-src="{{store.product.master.image_mini || store.no_image_mini}}" purl="store.product.master.image" class="v_color" title="{{product.colors[0]}}"/>
                      </a>
                    </div>
                    <div ng-repeat="variant in store.product.variants" id='t_{{variant.id}}'>
                      <a href="" ng-click="store.thumb_clicked(variant,'variant')" >
                        <img style="height:60px;" ng-src="{{variant.image_mini || store.no_image_mini}}" purl="{{variant.image}}" class="v_color" title="{{variant.color}}"/>
                      </a>
                    </div>
                  </ul>
                </div>

            </div>

          </div>


        </div>

        <div class="social-icons">
          <label><%= 'Share' if !mobile_agent? %></label>
            <ul ng-social-buttons
                 data-url="store.myModel.FbLikeUrl"
                 data-title="store.myModel.Name"
                 data-description="store.myModel.Name"
                 data-image="store.myModel.ImageUrl">
                <li class="ng-social-pinterest">Pin It</li>
                <li class="ng-social-facebook"> Facebook</li>
                <li class="ng-social-twitter">Twitter</li>
            </ul>

        </div>

        <div>
          <%
            go_back_link = %Q{/t/#{@product.cat_taxon.permalink}}  rescue request.referer
            go_back_text = %Q{Go back to #{@product.cat_taxon.name}} rescue 'Go Back'

          %>
          <a href="<%= go_back_link %>" class="continue_shop" ><%= go_back_text %></a>&nbsp;<!--|&nbsp; <div id="cart2"></div> -->
        </div>

      </div>

      <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12 product-information">

        <div class="new-prod" ng-show="store.product.is_new"><span class="label label-danger">New</span></div>

        <h1 itemprop="name" content="<%=@product.name%>">{{store.product.name}}</h1>

        <!-- TODO set has no description text later if no discription -->
        <p itemprop="description" content="<%@product.description%>">
          {{store.product.description}}
        </p>

        <div class="product-details">

          <h2>Product details</h2>
          <ul>
            <li ng-repeat="product_property in store.product.product_properties">
              <strong>{{product_property.property}}</strong> :
              {{product_property.value }}
            </li>
          </ul>
          
        </div> <!-- product details -->

        <div class="product-settings">
          
            <div class="row" ng-show="store.product.widths.length > 0">
              <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2 icon-col">
                <%= image_tag "product-page/icon-width.png", class: "img-responsive" %>
              </div>
              <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 slider-col">
                <h3>Width</h3>
                <div id="width-slider">
                  <ol class="labels">                    
                      <li ng-repeat="width in store.product.widths">{{width}}</li>
                  </ol>
                </div>
              </div>
            </div>


            <div class="row" ng-show="store.product.diameters.length > 0">
              <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2 icon-col">
                <!-- TODO: Replace by diameter image -->
                <%= image_tag "product-page/icon-width.png", class: "img-responsive" %>
              </div>
              <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 slider-col">
                <h3>DiaMeter</h3>
                <div id="diameter-slider">
                  <ol class="labels">
                                
                      <li ng-repeat="diameter in store.product.diameters">{{diameter}}</li>
                    
                  </ol>
                </div>
              </div>
            </div>

            <div class="row" ng-show="store.product.totes.length>0">
              <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2 icon-col">
                <!-- TODO: change image -->
                <%= image_tag "product-page/icon-length.png", class: "img-responsive" %>
              </div>
              <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 slider-col">
                <h3>Size</h3>
                <div id="tote-slider">
                  <ol class="labels">
                      <li ng-repeat="tote in store.product.totes">{{tote}}</li>
                  </ol>
                </div>
              </div>
            </div>


            <div class="row" ng-show="store.product.putups.length > 0 ">
              <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2 icon-col">
                <%= image_tag "product-page/icon-length.png", class: "img-responsive" %>
              </div>
              <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 slider-col">
                <h3>Putup</h3>
                <div id="putup-slider">
                  <ol class="labels">
                      <li ng-repeat="putup in store.product.putups">{{putup}}</li>                    
                  </ol>
                </div>
              </div>
            </div>



            <div class="row" ng-show="store.product.counts.length > 0 ">
              <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2 icon-col">
                <%= image_tag "product-page/icon-length.png", class: "img-responsive" %>
              </div>
              <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 slider-col">
                <h3>Count</h3>
                <div id="count-slider">
                  <ol class="labels">
                      <li ng-repeat="count in store.product.counts">{{count}}</li>                    
                  </ol>
                </div>
              </div>
            </div>

          

            <div class="row" ng-show="store.product.lengths.length>0">
              <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2 icon-col">
                <%= image_tag "product-page/icon-length.png", class: "img-responsive" %>
              </div>
              <div class="col-lg-10 col-md-10 col-sm-10 col-xs-10 slider-col">
                <h3>Length</h3>
                <div id="length-slider">
                  <ol class="labels">                    
                    <li ng-repeat="length in store.product.lengths">{{length}}</li>
                  </ol>
                </div>
              </div>
            </div>


          <%= form_for :order, :url => populate_orders_path,:html => {:id =>'add_to_cart_form'}   do |f| %>

            <div class="row">

              <div ng-show="store.product.colors.length!=0" class="col-lg-7 col-md-5 col-sm-5 col-xs-5">
                  <h3>Color</h3>
                  <meta itemprop="color" content="<%=@product.colors.uniq.join(', ')%>">

                  <select ng-model="store.selected_color" ng-change="store.color_changed()" id="{{store.colors_class}}" class="form-control select select-primary colors {{store.colors_class}}" data-toggle="select" itemprop = "color" content="<%= @product_color %>" >
                    <option ng-repeat="item in store.options_for_colors track by item.value" value="{{item.key}}">{{item.value}}</option>
                  </select>
              </div>
                                    
              <div ng-show="store.product.colors.length==0" class="col-lg-7 col-md-5 col-sm-5 col-xs-5"></div>
              
              <div class="col-lg-5 col-md-5 col-sm-5 col-xs-4 quantity-col">
                <h3>Quantity</h3>
                <%= text_field_tag :quantity, 1, :class => 'input-sm spinner form-control', :min => 1 %>

                <!-- <input type="text" id="spinner-05" value="0" class="form-control input-sm spinner" /> -->
              </div>

            </div>



            <%= hidden_field_tag "variant_id", "{{store.product.master.id}}" %>

            <% @product.variants.each do |variant|%>
              <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                  <meta itemprop="sku" content="<%=variant.sku%>">
                  <meta itemprop="price" content="<%=variant.price%>" />
                  <meta itemprop="priceCurrency" content="USD" />
                  <meta itemprop="availability" content="http://schema.org/InStock" />
              </div>
            <% end %>

            <div class="row bottom-row">
              <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 price columns left">
                <span>
                </span>
              </div>
                
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6 add-col right">
                  <%= button_tag :class => 'btn btn-lg btn-info btn-embossed add-to-cart', :id => 'add-to-cart-button', :type => :submit do %>
                    <%= Spree.t(:add_to_cart) %>
                  <% end %>

                  <!-- <button type="submit" class="btn btn-lg btn-info btn-embossed add-to-cart">Add To Cart</button> -->
                </div>
            </div> <!-- row -->

          <% end %>

        
        </div> <!-- product settings -->

      </div> <!-- col -->

    </div> <!-- row -->

    <div class="row">

      <div class="col-lg-12">

        <div ng-show="store.related_products.length>0" class="jcarousel-wrapper">
          <div class="headline"><h3>Related Products</h3></div>
          <div class="jcarousel related-items" id="related-items">
            <ul>
              <li ng-repeat="related_product in store.related_products">
                <a title="{{related_product.name}}" ng-href="{{related_product.url}}">
                <img ng-src="{{related_product.image}}"  class = "img-responsive" /></a>
              </li>
            </ul>
          </div>

          <a href="#" class="jcarousel-control-prev">&lsaquo;</a>
          <a href="#" class="jcarousel-control-next">&rsaquo;</a>

          <p class="jcarousel-pagination"></p>
        </div>

      </div>

    </div>

  </div> <!-- container -->

</div> <!-- main content -->


<!-- Non Reusable page specific Javascript -->
  
<script type="text/javascript">
  var mobile_agent = <%= mobile_agent? ? 'true' : 'false' %>;


  if(mobile_agent && window.innerWidth < 500){
          setTimeout(function(){$("html, body").animate({ scrollTop: "152px" },function(){
            $(window).scrollTop(152);
          });},1000);  
        }

        
  function setup_sliders(){
    setTimeout(function(){
      console.log('============================ ///////////////////////');
      $('.slider-for').slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: false,
        fade: true,
        asNavFor: '.slider-nav',
      });

      
      $('.slider-nav').slick({
        // centerMode: true,
        slidesToShow: 5,
        slidesToScroll: 5,
        dots: false,
        // focusOnSelect: false,
        swiptToSlide:true,
        arrows:true,
        infinit:true
      });

      $('.slider-for').on('afterChange', function(event, slick, currentSlide){
        e = event;
        s = slick;

        console.log(event)
        console.log(slick);
        console.log(currentSlide);
        // check if product is same if not then switch product
        if(product.colors.length == 1){
          var indx = get_product_index(slug);
          if(currentSlide != indx){
            t_id = $(slick.$slides[slick.currentSlide]).attr('id');
            $('#t_'+t_id+' a').trigger('click');                  
          //   console.log('change product')
          //   var p = products[currentSlide];
          //   $('.colors').val(p.colors[0]);
          //   $('.colors').trigger('change');
          } 
        }else{
          console.log(currentSlide);

          if(v_offset == 0){
            currentSlide=currentSlide-v_offset;
            if(currentSlide==-1) product.variants.length-1;
          }

          var v = product.variants[currentSlide];
    
          if(v && variant.id != v.id)
          {
            t_id = $(slick.$slides[slick.currentSlide]).attr('id');
            $('#t_'+t_id+' a').trigger('click');
          }
          //$('.colors').val(v.color);
          //$('.colors').trigger(v.color);
        }

      });

      if(!mobile_agent)
        setTimeout(function(){$('.slider-for .zoom').easyZoom();},100);
    
    },200);
  }
  
  function find_product_by_color(color){
    for(var i=0;i<products.length;i++){
      if(products[i].colors.indexOf(color) != -1)
        return products[i]
    }
  }

  function get_variant_index(variant){
    for(var i =0;i<product.variants.length;i++){
      if(variant.id == product.variants[i].id)
        return i;
    }
    return -1;
  }
  function get_product_index(slug){
    for(var i=0; i<products.length;i++){
      if(products[i].slug == product.slug)
        return i; 
    }
    return -1;
  }

  function set_main_slider(product_index){
    if(product_index != $('.slider-for').slick('slickCurrentSlide'))
      $('.slider-for').slick('slickGoTo',product_index)
  }

  thirty_days_ago = new Date(new Date() - (30*24*60*60*1000));
  
  function change_variant(event,ui){
    // console.log('=============================')
    // console.log(product.master.id);
    setTimeout(function(){
      if(variants.length >0 ){
        var width_index = $("#width-slider").slider("value")*1-1;
        var diameter_index = $("#diameter-slider").slider("value")*1-1;
        var tote_index = $("#tote-slider").slider("value")*1-1;
        var putup_index = $("#putup-slider").slider("value")*1-1;
        var length_index = $("#length-slider").slider("value")*1-1;
        var count_index = $("#count-slider").slider("value")*1-1;
        // var colors_index = colors.indexOf($(".colors_variant").val());
        

        selected_width = widths.length > 1 ? widths[width_index] : (widths.length==0 ? '' : widths[0]);
        selected_diameter = diameters.length>1 ? diameters[diameter_index] : (diameters.length==0 ? '' : diameters[0]);
        selected_tote = totes.length > 1 ? totes[tote_index] : (totes.length==0 ? '' : totes[0]);
        selected_putup = putups.length > 1 ? putups[putup_index] : (putups.length==0 ? '' : putups[0]);
        selected_length = lengths.length > 1 ? lengths[length_index] : (lengths.length==0 ? '' : lengths[0]);
        selected_count = counts.length > 1 ? counts[count_index] : (counts.length==0 ? '' : counts[0]);
        
        // selected_color = colors.length > 1 ? $('#color-selector').val() : (colors.length==0 ? '' : $('#color-selector').val());//colors[0]);

        // console.log('selected_width: '+selected_width);
        // console.log('selected_putup: '+selected_putup);
        selected_variant = -1;
        $.each(variants,function(index,value){
          if( value[1].toLowerCase().replace(' ','-')==selected_width.toLowerCase().replace(' ','-') && 
              value[2].toLowerCase().replace(' ','-')==selected_putup.toLowerCase().replace(' ','-') && 
              value[6].toLowerCase().replace(' ','-')==selected_diameter.toLowerCase().replace(' ','-') && 
              value[7].toLowerCase().replace(' ','-')==selected_length.toLowerCase().replace(' ','-') && 
              value[8].toLowerCase().replace(' ','-')==selected_tote.toLowerCase().replace(' ','-') && 
              value[9].toLowerCase().replace(' ','-') == selected_color.toLowerCase().replace(' ','-') &&
              value[10].toLowerCase().replace(' ','-') == selected_count.toLowerCase().replace(' ','-')){
            selected_variant = index;
          }
        });

        if(selected_variant==-1){
          $('.price span').html('<span style="color:red;font-size:24px">Not Available</span>');
          $('#add-to-cart-button').hide();
          $('.product-details ul #sku').html('<strong>SKU</strong> : NA');
        }else if(variants[selected_variant][4]){ // can supply (i.e not out of stock)
          $('#variant_id').val(variants[selected_variant][0]);
          $('.price span').html(variants[selected_variant][3]);
          $('#add-to-cart-button').show();
          $('.product-details ul #sku').html('<strong>SKU</strong> : '+variants[selected_variant][5]);
          // for(var i = 0; i < product.variants.length; i++){
          //   if(product.variants[i].id == variants[selected_variant][0]){
          //     if(product.variants[i].image)
          //       $('.product_main img').attr('ng-src',product.variants[i].image);
          //   }
          // }
          // console.log("variant_found");
        }else{ // out of stock
          $('.price span').html('<span style="color:red;font-size:24px">'+out_of_stock_text+'</span>');
          $('#add-to-cart-button').hide();
          $('.product-details ul #sku').html('<strong>SKU</strong> : NA');
        }
      }else{
        $('#variant_id').val(product.master.id);
        $('.price span').html(product.master.price);
        $('#add-to-cart-button').show();
        $('.product-details ul #sku').html('<strong>SKU</strong> : '+product.master.sku);
      }
    },100);

  }


  function find_option_from_labels(labels, option){
    for(var i=0;i<labels.length;i++){
      if(labels[i].toLowerCase().replace(' ','-')==option.toLowerCase().replace(' ','-'))
        return i;
    }
    return -1
  }


  function change_variant_by_id(variant_id){
    for(var i = 0; i < variants.length; i++){
      if(variants[i][0]==variant_id){
        selected_variant_index = i;
        break;
      }
    }

    variant = product.variants[selected_variant_index];

    value = variants[selected_variant_index];
    var windex = find_option_from_labels(widths,value[1])+1;
    if(windex) 
      $("#width-slider").slider("value", windex);
    var dindex = find_option_from_labels(diameters,value[6])+1;
    if(dindex)
      $("#diameter-slider").slider("value",dindex);
    var tindex = find_option_from_labels(totes,value[8])+1
    if(tindex)     
      $("#tote-slider").slider("value",tindex);
    var pindex = find_option_from_labels(putups,value[2])+1;
    if(pindex)
      $("#putup-slider").slider("value",pindex);
    var lindex = find_option_from_labels(lengths,value[7])+1;
    if(lindex)
      $("#length-slider").slider("value",lindex);
    var cindex = find_option_from_labels(counts, value[10])*1;
    if(cindex)
      $("#count-slider").slider("value",cindex);
    

    if(value[9]!=''){
      $('.colors').val(value[9]);
      selected_color=value[9];
    }
    var cindex = counts.indexOf(value[10])+1
    if(value[10]!='')
      $('#count-slider').slider("value",cindex);
    

    // change_variant();
    $('#variant_id').val(variants[selected_variant_index][0]);
    $('.price span').html(variants[selected_variant_index][3]);
    $('#add-to-cart-button').show();
    $('.product-details ul #sku').html('<strong>SKU</strong> : '+variants[selected_variant_index][5]);

  }


  function set_slider_width(div_selector, arr){
    parentWidth = $(div_selector).width();
    if(arr.length == 1){
      itemWidth = parentWidth;
      parentWidth = 0;
    }else if(arr.length == 2)
      itemWidth = parentWidth;
    else
      itemWidth = arr.length>0 ? parseInt(parentWidth / arr.length) : 0;
    labelsWidth = parentWidth+itemWidth;
    $(div_selector+' ol.labels').css("width",labelsWidth); // set width of labels div for any options
    $(div_selector+' ol.labels').css("left", "-" + itemWidth/2 +"px"); // adjust to bring label to center  
  }

  // $(document).ready(function(){

    // Add SKU to products page
    $('.product-details ul').append('<li id="sku"><strong>SKU</strong> : NA </li>');

    out_of_stock_text = "<%= Spree.t(:out_of_stock) %>";
    
    variants = [];
    
    widths = [];
    selected_width = '';  
    
    diameters = [];
    selected_diameter = '';
    
    totes = [];
    selected_tote = '';

    putups = [];
    selected_putup = '';

    lengths = [];
    selected_length = '';

    counts = [];
    selected_count = '';

    colors = [];
    selected_color = '';
    
    product=null;

  
  var slug = '<%=params[:id]%>';

  fblikeurl = '<%="#{request.protocol}#{request.host_with_port}"%>'+'/products/' + slug + '<%= @taxon ? "?taxon_id=#{@taxon.id}" : "" %>';
    
  (function(){
    var app = angular.module('spreeStore', ['ngSocial'])
    
    app.controller('StoreController',['$http',function($http){
      var store = this;
      this.product=null;

      this.no_image = '<%=image_path("noimage/small.png")%>';
      this.no_image_mini = '<%=image_path("noimage/mini.png")%>';
      
      this.myModel={
        Name: '',
        ImageUrl: '',
        FbLikeUrl:''
      };


      this.find_variant_by_color = function(color){
        for(var i=0;i<store.product.variants.length;i++){
          if(store.product.variants[i].color==color)
            return store.product.variants[i]
        }
      }

      this.options_for_colors = [];
      
      this.colors_class=null;
      this.selected_color=null;
      


      this.selected_width=null;
      this.selected_diameter=null;
      this.selected_tote=null;
      this.selected_putup=null;
      this.selected_length=null;
      this.selected_count=null;

      this.selected_image=null;
      this.selected_image_large=null;
      
      this.related_products=null;

      this.thumb_clicked = function(item, item_type){
        console.log('in thumb_clicked');
        i = item;
        store.selected_image = store.myModel.ImageUrl = item.image;
        store.selected_image_large = item.image_large;
        
        if(item_type == 'product'){
          slug = item.slug;
          store.setProduct();
          setTimeout(function(){$('#colors_page').select2('val',selected_color,false);},100);
          var indx = get_product_index(item.slug);
          set_main_slider(indx);
            //setTimeout(function(){$('.colors').trigger('change')},1000);
        }

        if(item_type=='variant'){
          // set color as well.
          if(item.color!=''){
            selected_color = store.selected_color = item.color;
            setTimeout(function(){$("select").select2({dropdownCssClass: 'dropdown-inverse'});},100);
          }

          change_variant_by_id(item.id);
          store.myModel.FbLikeUrl = fblikeurl + '&variant_id='+item.id;
          jQuery('#multiple-items1').jcarousel('reload');
          var indx = get_variant_index(item);
          set_main_slider(indx+v_offset);
          //$('.slider-nav').slick('slickGoTo',indx+v_offset);

        }
        // setTimeout(function(){
        //   $('.zoom').easyZoom({parent: '.product-display'});
        // },100);

        // if(p.variants){ // check if product or variant;
        //   store.selected_color = p.colors[0];
        // }else{
        //   store.selected_color = p.color;
        // }
        // store.color_changed();

      };

      this.color_changed = function(){

        if($('.colors').hasClass('colors_page')){

                selected_color = store.selected_color;
                // instead of selected_color change, pick the index and goto that slide

                // $('.slider-nav').slick('slickGoTo',idx);

                slug = find_product_by_color(selected_color).slug;
                store.setProduct();
                setTimeout(function(){$('.colors').trigger('change')},100);

                var indx = get_product_index(product.slug);

                $('.slider-nav').slick('slickGoTo',indx);
                $('.slider-for').slick('slickGoTo',indx);  
                // setTimeout(function(){
                //   $('.zoom').easyZoom({parent: '.product-display'});
                // },100);

        }else{
                console.log('in color change for variant');

                selected_color = store.selected_color; //$(this).val();

                variant = store.find_variant_by_color(selected_color);
              
                var indx = get_variant_index(variant);
                $('.slider-nav').slick('slickGoTo',indx+v_offset);
                $('.slider-for').slick('slickGoTo',indx+v_offset);
                
                if(variant.image){
                  store.selected_image = store.myModel.ImageUrl = variant.image;
                  selected_img_large = store.selected_image_large = variant.image_large;
                    
                  // update zoom plugin
                  // setTimeout(function(){
                  //   $('.zoom').easyZoom({parent: '.product-display'});
                  // },100);
                }
              
                change_variant_by_id(variant.id); 

                store.myModel.FbLikeUrl = fblikeurl + '&variant_id=' + $('#variant_id').val();
                if(store.product.variant_images_count > 1)
                  jQuery('#multiple-items1').jcarousel('reload');
        }

      }

      this.set_options_for_color_select = function(){
        if(store.product.colors == 0) 
          return; // no color option for this product
        
        store.options_for_colors.length = 0;

        var selected = 0;
        var used_colors = [];
        var col;
        if(store.product.colors.length==1){
          store.colors_class = "colors_page";
          for(var i=0;i<store.products.length;i++){
            col = store.products[i].colors[0];
            if(used_colors.indexOf(col)==-1){
              used_colors.push(col);
              store.options_for_colors.push( { key : col, value : col } );
            }
            if(store.product.colors[0]==col){
              selected = col;
            }
          }
          if(this.selected_color==null){
            selected_color = this.selected_color = col;
            $('.colors').val(col);
            // $('.colors').select2({dropdownCssClass: 'dropdown-inverse'});
            //setTimeout(function(){$('.colors').trigger('change')},1000);
            setTimeout(function(){$('.colors').trigger('change')},100);
          }
        }else if(store.product.colors.length>1){
          store.colors_class = "color-selector";
          for(var i=0;i<store.product.colors.length;i++){
            store.options_for_colors.push( { key : store.product.colors[i], value : store.product.colors[i] } );
          } 
          if(this.selected_color==null){        
            selected_color = this.selected_color = store.options_for_colors[0].value;
            $('.colors').val(store.selected_color.value);
          }
          setTimeout(function(){$('.colors').trigger('change')},100);
        }

        
        
      };

      this.setProduct = function(){
        //console.log('set product called');
        products = store.products;
        for(var i=0;i<store.products.length;i++){
          if(store.products[i].slug==slug){
            product = store.product=store.products[i];

            // setup variants array
            variants=[];
            
            v_offset = 0;
            // if(product.master.image)
              // v_offset = 1

            for(var j=0; j<store.product.variants.length;j++){
              variant = store.product.variants[j];
              variants.push([variant.id,variant.width, variant.putup, variant.price, variant.can_supply,variant.sku,variant.diameter,variant.length, variant.tote, variant.color, variant.count])
            }
            
            // setup options array
            widths = store.product.widths;
            diameters = store.product.diameters;
            totes = store.product.totes;
            putups = store.product.putups;
            lengths = store.product.lengths;
            colors = store.product.colors;
            counts = store.product.counts;


            //sharing plugins
            store.myModel.ImageUrl = store.product.image;
            store.myModel.FbLikeUrl = fblikeurl;

            store.myModel.Name = store.product.name;

            setTimeout(function(){

              //console.log('in set timeout');
              // calculate value from default product below.

              $('#color-selector').unbind('click');
              $('colors_page').unbind('click');              
              $('.v_color').unbind('click');


              store.selected_image = store.product.image;
              store.selected_image_large = store.product.image_large;

              // remove dots from sliders
              $('.ui-slider-segment').remove()

              wslider = $("#width-slider");
              if (wslider.length > 0) {
                wslider.slider({
                  min: 1,
                  max: widths.length,
                  value: widths.indexOf(selected_width)+1,
                  orientation: "horizontal",
                  range: "min",
                  change: change_variant
                }).addSliderSegments(widths.length);
              }

              dslider = $("#diameter-slider");
              if (dslider.length > 0) {
                dslider.slider({
                  min: 1,
                  max: diameters.length,
                  value: 1,
                  orientation: "horizontal",
                  range: "min",
                  change: change_variant
                }).addSliderSegments(diameters.length);
              }

              tslider = $("#tote-slider");
              if (tslider.length > 0) {
                tslider.slider({
                  min: 1,
                  max: totes.length,
                  value: 1,
                  orientation: "horizontal",
                  range: "min",
                  change: change_variant
                }).addSliderSegments(totes.length);
              }

              pslider = $("#putup-slider");
              if (pslider.length > 0) {
                pslider.slider({
                  min: 1,
                  max: putups.length,
                  value: putups.indexOf(selected_putup)+1,
                  orientation: "horizontal",
                  range: "min",
                  change: change_variant
                }).addSliderSegments(putups.length);
              }

              lslider = $("#length-slider");
              if (lslider.length > 0) {
                lslider.slider({
                  min: 1,
                  max: lengths.length,
                  value: 1,
                  orientation: "horizontal",
                  range: "min",
                  change: change_variant
                }).addSliderSegments(lengths.length);
              }

              cslider = $("#count-slider");
              if (cslider.length > 0) {
                cslider.slider({
                  min: 1,
                  max: counts.length,
                  value: 1,
                  orientation: "horizontal",
                  range: "min",
                  change: change_variant
                }).addSliderSegments(counts.length);
              }

              store.set_options_for_color_select();


              change_variant_by_id(variants[0][0]);
      
              if($('.price span span').text()=="Not Available")
                change_variant_by_id(variants[0][0]);
              
              set_slider_width('#width-slider',widths);
              set_slider_width('#diameter-slider',diameters);
              set_slider_width('#tote-slider',totes);
              set_slider_width('#putup-slider',putups);
              set_slider_width('#length-slider',lengths);
              set_slider_width('#count-slider',counts);

              // images carousel
              setTimeout(function(){jQuery('#multiple-items1').jcarousel('reload')},100);   


            },100);


            //console.log('set product');
          }    
        }
      };


      this.products = [
        <%= raw render :partial =>  'show.html.jbuilder', :locals => {:product => @product} %>
      ];
      // slug is already set
      this.setProduct();
      setTimeout(function(){$('.colors').trigger('change')},100);

      setTimeout(function(){
        jQuery('#multiple-items1').jcarousel('reload');   
      },100);
      
      if(mobile_agent && window.innerWidth < 500){

        function image_click_handler(event){
          event.preventDefault();

          if($('#homepage-carousel').hasClass('h')) return;

          v_scroll_position = $(window).scrollTop();

          $(window).scrollTop(0);

          $('.product-display').attr('style','position:inherit;margin:0px;padding:0px;')
          $('.container.ng-scope').attr('style','margin-left:0px;');
          $('#homepage-carousel').removeClass('click');
          $('#homepage-carousel').addClass('h');
          $('.thumb-row').addClass('b');
          //disable scroll
          $(document).bind('touchmove', function(e) {
            e.preventDefault();
          });

          easyzoom = [];
          if($('.image_zoom').length==1){
            easyzoom.push($($('.image_zoom')[0]).easyZoom().data('easyZoom'));
          }else{
            for(var i =0; i<$('.zoom').length;i++){
              easyzoom.push($($('.zoom')[i]).easyZoom().data('easyZoom'));
            }
          }
        }
        
        $(document).on('click', '.image_zoom a', image_click_handler);

        $(document).on('click', '.slick-active .zoom a', image_click_handler);


        $(document).on('click', '.back-btn', function(){
          
          $('.product-display').attr('style','')
          $('.container.ng-scope').attr('style','');
          $('#homepage-carousel').addClass('click');
          $('#homepage-carousel').removeClass('h');
          $('.thumb-row').removeClass('b');
          
          //disable scroll
          $(document).unbind('touchmove');

          $(window).scrollTop(v_scroll_position);

          for(var i=0;i<easyzoom.length;i++){
            easyzoom[i].teardown();
          }

        });
      }else{
      
        setTimeout(function(){
          $('.image_zoom').easyZoom();
        },100);
      
      }

      if(product.colors.length>1 || product.colors.length ==0)
          setup_sliders();

      <% if params[:variant_id] %>
        setTimeout(function(){
          change_variant_by_id(<%= params[:variant_id]%>);
        },100);
      <% end %>

      <% if @product.colors.uniq.length == 1 %>
        $http.get('/products/'+slug+'.json?taxon_id=<%=@taxon.id%>').success(function(data){
          if($('#homepage-carousel').hasClass('h'))
            $('.back-btn').trigger('click');
          store.products = data;
          store.setProduct();
          setup_sliders();
          setTimeout(function(){$('#t_'+product.id+' a').trigger('click')},300);
          // setTimeout(function(){$('.colors').trigger('change')},100);

        }).
          error(function(data, status, headers, config) {
            alert('Unable to load some parts of the page, please try and reload to get complete data.');
          });;
      <% end %>

      $http.get('/products/'+slug+'/related_products.json<%= @taxon ? "?taxon_id=#{@taxon.id}" : "" %>').success(function(data){
        store.related_products = data.products;
        setTimeout(function(){
          jQuery('#related-items').jcarousel('reload');   
        },100);
        //setup_sliders();
      })

    }]);




  })();

  (function(){
    function template(tmpl, context, filter) {
        'use strict';

        return tmpl.replace(/\{([^\}]+)\}/g, function (m, key) {
            // If key don't exists in the context we should keep template tag as is
            return key in context ? (filter ? filter(context[key]) : context[key]) : m;
        });
    }

    var app = angular.module('ngSocial', []);

    app.directive('ngSocialButtons', ['$compile', '$q', '$parse', '$http', '$location',
        function ($compile, $q, $parse, $http, $location) {
            'use strict';

            return {
                restrict: 'A',
                scope: {
                    'url': '=',
                    'title': '=',
                    'description': '=',
                    'image': '=',
                    'showcounts': '='
                },
                replace: true,
                transclude: true,
                template: '<div class="ng-social-container ng-cloak"><ul class="ng-social" ng-transclude></ul></div>',
                controller: ['$scope', '$q', '$http', function ($scope, $q, $http) {
                    var getUrl = function () {
                        return $scope.url || $location.absUrl();
                    }, ctrl = this;
                    this.init = function (scope, element, options) {
                        if (options.counter) {
                            ctrl.getCount(scope.options).then(function (count) {
                                scope.count = count;
                            });
                        }
                    };
                    this.link = function (options) {
                            options = options || {};
                            var urlOptions = options.urlOptions || {};
                            urlOptions.url = getUrl();
                            urlOptions.title = $scope.title;
                            urlOptions.image = $scope.image;
                            urlOptions.description = $scope.description || '';
                            return ctrl.makeUrl(options.clickUrl || options.popup.url, urlOptions);
                    };
                    this.clickShare = function (e, options) {
                        if (e.shiftKey || e.ctrlKey) {
                            return;
                        }
                        e.preventDefault();

                        if (options.track && typeof _gaq != 'undefined' && angular.isArray(_gaq)) {
                            _gaq.push(['_trackSocial', options.track.name, options.track.action, $scope.url]);
                        }

                        var process = true;
                        if (angular.isFunction(options.click)) {
                            process = options.click.call(this, options);
                        }
                        if (process) {
                            var url = ctrl.link(options);
                            ctrl.openPopup(url, options.popup);
                        }
                    };
                    this.openPopup = function (url, params) {
                        var left = Math.round(screen.width / 2 - params.width / 2),
                            top = 0;
                        if (screen.height > params.height) {
                            top = Math.round(screen.height / 3 - params.height / 2);
                        }

                        var win = window.open(
                            url,
                            'sl_' + this.service,
                            'left=' + left + ',top=' + top + ',' +
                            'width=' + params.width + ',height=' + params.height +
                            ',personalbar=0,toolbar=0,scrollbars=1,resizable=1'
                        );
                        if (win) {
                            win.focus();
                        } else {
                            location.href = url;
                        }
                    };
                    this.getCount = function (options) {
                        var def = $q.defer();
                        var urlOptions = options.urlOptions || {};
                        urlOptions.url = getUrl();
                        urlOptions.title = $scope.title;
                        var url = ctrl.makeUrl(options.counter.url, urlOptions),
                            showcounts = angular.isUndefined($scope.showcounts) ? true : $scope.showcounts;

                        if (showcounts) {
                            if (options.counter.get) {
                                options.counter.get(url, def, $http);
                            } else {
                                $http.jsonp(url).success(function (res) {
                                    if (options.counter.getNumber) {
                                        def.resolve(options.counter.getNumber(res));
                                    } else {
                                        def.resolve(res);
                                    }
                                });
                            }
                        }
                        return def.promise;
                    };
                    this.makeUrl = function (url, context) {
                        return template(url, context, encodeURIComponent);
                    };
                    return this;
                }]
            };
        }
        ]);

    app.directive('ngSocialFacebook', function() {
        'use strict';

        var options = {
            counter: {
                url: '<%=request.protocol %>graph.facebook.com/fql?q=SELECT+total_count+FROM+link_stat+WHERE+url%3D%22{url}%22' +
                     '&callback=JSON_CALLBACK',
                getNumber: function(data) {
            if (0 === data.data.length) {
              return 0;
            }

                    return data.data[0].total_count;
                }
            },
            popup: {
                url: 'https://www.facebook.com/sharer/sharer.php?u={url}',
                width: 600,
                height: 500
            },
            track: {
                'name': 'facebook',
                'action': 'send'
            }
        };
        return {
            restrict: 'C',
            require: '^?ngSocialButtons',
            scope: true,
            replace: true,
            transclude: true,
            template: '<li>' +
                        '<a ng-href="{{ctrl.link(options)}}" target="_blank" ng-click="ctrl.clickShare($event, options)"' +
                            ' class="btn btn-default btn-sm btn-social-facebook">' +
                            '<span class="fui-facebook"></span>' +
                            '<span class="ng-social-text" ng-transclude></span>' +
                            '<span ng-show="count" class="btn-tip">{{ count }}</span>' +
                        '</a>' +
                       '</li>',
            link: function(scope, element, attrs, ctrl) {
                element.addClass('ng-social-facebook');
                if (!ctrl) {
                    return;
                }
                scope.options = options;
                scope.ctrl = ctrl;
                ctrl.init(scope, element, options);
            }
        };
    });

    app.directive('ngSocialTwitter', function() {
        'use strict';

        var options = {
            counter: {
                url: '<%=request.protocol %>urls.api.twitter.com/1/urls/count.json?url={url}&callback=JSON_CALLBACK',
                getNumber: function(data) {
                    return data.count;
                }
            },
            popup: {
                url: 'https://twitter.com/intent/tweet?url={url}&text={title}',
                width: 600,
                height: 450
            },
            click: function(options) {
                // Add colon to improve readability
                if (!/[\.:\-–—]\s*$/.test(options.pageTitle)) options.pageTitle += ':';
                return true;
            },
            track: {
                'name': 'twitter',
                'action': 'tweet'
            }
        };
        return {
            restrict: 'C',
            require: '^?ngSocialButtons',
            scope: true,
            replace: true,
            transclude: true,
            template: '<li> \
                        <a ng-href="{{ctrl.link(options)}}" target="_blank" ng-click="ctrl.clickShare($event, options)" class="btn btn-default btn-sm btn-social-twitter"> \
                            <span class="fui-twitter"></span> \
                            <span class="ng-social-text" ng-transclude></span> \
                          <span ng-show="count" class="btn-tip">{{ count }}</span> \
                        </a> \
                       </li>',
            controller: function($scope) {
            },
            link: function(scope, element, attrs, ctrl) {
                element.addClass('ng-social-twitter');
                if (!ctrl) {
                    return;
                }
                scope.options = options;
                scope.ctrl = ctrl;
                ctrl.init(scope, element, options);
            }
        }
    });
    


    angular.module("ngSocial").directive('ngSocialPinterest', function() {
        'use strict';
 
        var options = {
            counter: {
                url: '<%=request.protocol %>api.pinterest.com/v1/urls/count.json?url={url}&callback=JSON_CALLBACK',
                getNumber: function(data) {
                    return data.count;
                }
            },
            popup: {
                url: 'https://pinterest.com/pin/create/button/?url={url}&description={title}&media={image}',
                width: 630,
                height: 270
            }
        };
        return {
            restrict: 'C',
            require: '^?ngSocialButtons',
            scope: true,
            replace: true,
            transclude: true,
            template: '<li> \
                        <a ng-href="{{ctrl.link(options)}}" target="_blank" ng-click="ctrl.clickShare($event, options)" class="btn btn-default btn-sm btn-social-pinterest"> \
                            <span class="fui-pinterest"></span> \
                            <span class="ng-social-text" ng-transclude></span> \
                            <span ng-show="count" class="btn-tip">{{ count }}</span> \
                        </a> \
                       </li>',
            controller: function($scope) {
            },
            link: function(scope, element, attrs, ctrl) {
                element.addClass('ng-social-pinterest');
                if (!ctrl) {
                    return;
                }
                scope.options = options;
                scope.ctrl = ctrl;
                ctrl.init(scope, element, options);
            }
        }
    });



  })();


</script>